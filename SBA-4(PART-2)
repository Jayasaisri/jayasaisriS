package com.task.task.dao;

import javax.transaction.Transactional;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.task.task.model.DxcUsers;

@Component
@Transactional
public class DxcUsersDao {

	@Autowired
	SessionFactory sessionFactory;

	public String saveUser(DxcUsers dxcUsers) {
		
		try {
			Session session = sessionFactory.getCurrentSession();
			session.save(dxcUsers);
			

			return "Successfully user created!!!!";
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			System.out.println("exception");
		}

		return "Sorry cannot create user";
	}

	public DxcUsers getUserInfo(int userId) {
		Session session = null;
		DxcUsers user = null;

		session = sessionFactory.getCurrentSession();
		user = session.get(DxcUsers.class, userId);
		System.out.println("User Data : "+user);
		
		return user;
	}
	 
	public DxcUsers getSecInfo(int userId) {
		Session session = null;
		DxcUsers user = null;
		session = sessionFactory.getCurrentSession();
		user = session.get(DxcUsers.class, userId);
		return user;
		
	}

	public void changePassword(String password,int userId) {
		DxcUsers user = null;
		Session session = null;
		
		user = getSecInfo(userId);
		user.setPassword(password);

		session = this.sessionFactory.getCurrentSession();
		
			session.update(user);
	}
	

	
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.task.task.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class BootMvcTaskApplication {

	public static void main(String[] args) {
		
		
		SpringApplication.run(BootMvcTaskApplication.class, args);
	
	
	
	}

}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.task.task.demo;

import javax.persistence.EntityManagerFactory;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@EnableTransactionManagement
@Configuration
public class ConfigClass {

@Autowired
EntityManagerFactory entityManagerFactory;

@Bean
public SessionFactory getSessionFactory(){
return entityManagerFactory.unwrap(SessionFactory.class);
}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.task.task.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.task.task.dao.DxcUsersDao;
import com.task.task.model.DxcUsers;

@Controller
public class HomeController {

	@Autowired
	DxcUsersDao userDao;

	@RequestMapping(value = "/save")
	public String home() {
		return "home";
	}

	@PostMapping("/regdata")
	public String regdata(Model model, @ModelAttribute DxcUsers dxcUsers) {
		System.out.println(dxcUsers);
		String status = userDao.saveUser(dxcUsers);
		model.addAttribute("status", status);
		return "display";
	}
	
	@GetMapping("/login")
	public String getLogin(@RequestParam("userid") int userid, @RequestParam("username") String username,
			@RequestParam("password") String password, Model model) {
		System.out.println("Username : "+username);
		DxcUsers user = null;

		user = userDao.getUserInfo(userid);
		
		if (username.equals(user.getUsername()) && password.equals(user.getPassword())) {
			return "success";
		}

		model.addAttribute("message", "Login Failed Please Enter Valid User Info");
		return "Fail";
	}
	
	@GetMapping("/displayLogin")
	public String getLoginInfo() {
		return "userLogin";
	}
	@GetMapping("/pass")
	public String getSec(@RequestParam("userid") int userid,@RequestParam("security_question") String security_question,
			@RequestParam("security_answer") String security_answer,Model model) {
		DxcUsers user = null;

		user = userDao.getUserInfo(userid);
		
		if (security_question.equals(user.getSecurity_question()) && security_answer.equals(user.getSecurity_answer())) {
			model.addAttribute("userId", userid);
			return "Changepass";
		}

		model.addAttribute("message", "Login Failed Please Enter Valid User Info");
		
				return "forgotpassword";
		
	}
	@GetMapping("/forgotpass")
	public String getsecInfo() {
		return "forgotpassword";
     
}
	@GetMapping("/changepass")
	public String changpass(@RequestParam String password, @RequestParam String conformPass,@RequestParam("userid") int userId) {
		System.out.println("userId : "+userId);
		if(password.equals(conformPass)) {
			userDao.changePassword(password,userId);
			return "success";
		}
		return "ChangePass";
}
	/*@GetMapping("/error")
	public String errorpg() {
		return "forgotpassword";
	}*/
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.task.task.model;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
@Entity
public class DxcUsers {
	
	
	@Id
	 @Column(length = 5)
	
	int userid;
	 @Column(length = 15)
	String username;
	 @Column(length = 15)
	String password;
	 @Column(length = 50)
	String security_question;
	 @Column(length = 15)
	String security_answer;
	
	
	public int getUserid() {
		return userid;
	}
	public void setUserid(int userid) {
		this.userid = userid;
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getSecurity_question() {
		return security_question;
	}
	public void setSecurity_question(String security_question) {
		this.security_question = security_question;
	}
	public String getSecurity_answer() {
		return security_answer;
	}
	public void setSecurity_answer(String security_answer) {
		this.security_answer = security_answer;
	}
	@Override
	public String toString() {
		return "Dxc_Users [userid=" + userid + ", username=" + username + ", password=" + password
				+ ", security_question=" + security_question + ", security_answer=" + security_answer + "]";
	}
	public DxcUsers(int userid, String username, String password, String security_question, String security_answer) {
		super();
		this.userid = userid;
		this.username = username;
		this.password = password;
		this.security_question = security_question;
		this.security_answer = security_answer;
	}
	public DxcUsers() {
		super();
		// TODO Auto-generated constructor stub
	}

}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>dxcresthib</groupId>
<artifactId>Dxc-RestHib</artifactId>
<version>0.0.1-SNAPSHOT</version>
<name>Dxc-RestHib</name>
<description>Demo project for Spring Boot</description>


    <properties>
        <start-class>spring-boot-example.Application</start-class>
        <java.version>1.8</java.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <dependency>
                 <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
              </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-jasper -->
<dependency>
    <groupId>org.apache.tomcat</groupId>
    <artifactId>tomcat-jasper</artifactId>
    <version>8.5.11</version>
</dependency>


        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>
    </dependencies>

</project>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



























